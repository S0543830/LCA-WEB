@model LCA_WEB.Models.Produkt_Typ_Rohstoff_Indikator
@{
    ViewBag.Title = "Objekt erstellen";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Create","Home",FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Allgemeines zum Objekt</h2>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table id="tb_0">
            <tr>
                <th>Beschreibung:</th>
                <th>Produkttyp:</th>
                <th>Gesamtgewicht:</th>
                <th>Nutzungsdauer:</th>
            </tr>
            <tr class="center-block">
                <td>
                    @Html.EditorFor(model => model._Produkt.Name, new { htmlAttributes = new { @class = "col-md-10" } })
                    @Html.ValidationMessageFor(model => model._Produkt.Name, "", new { @class = "text-danger" })
                </td>
                <td>
                    @if (Model._Typ_Id != null)
                    {
                        @Html.DropDownListFor(m => m._ProduktTyp.Id, new SelectList(Model._Typ_Id, "Id", "Name", "Typ"), new {id = "selectTyp"})
                    }
                    else
                    {
                        <select>
                            <option>Kein Typ vorhanden</option>
                        </select>
                    }
                    <a> </a>
                       <input type="button" value="+" onclick="location.href='@Url.Action("AddProduktTyp","Home", new {whichView = "Create"})' " class="btn btn-default"/>
                       <a> </a>
                       <input id="btndeleteTyp" type="button" value="-"  class="btn btn-default" />
                    

                </td>
                <td>
                    @Html.EditorFor(model => model._Produkt.Gesamtgewicht, new { htmlAttributes = new { @class = "col-md-10" } })
                </td>
                <td>
                    @Html.EditorFor(model => model._Produkt.Nutzungsdauer_in_Jahre, new { htmlAttributes = new { @class = "col-md-10" } })
                </td>
            </tr>
        </table>
        <hr/>
        <h2>Rohstoffe des Objektes</h2>
        <table id="tb_1">
            <tr>
                <th>Beschreibung:</th>
                <th>Menge:</th>
                <th>Einheit:</th>
                <th>Umweltindikator:</th>
                <th>Umweltindikator Wert:</th>
            </tr>
            @for (int j = 0; j < Model.ProduktRohstoff.Count; j++)
            {
                <tr id="Rohstoff">
                    <td>
                        @if (Model._Rohstoffe != null)
                        {
                            @Html.DropDownListFor(m => m.ProduktRohstoff.ElementAt(j).Rohstoff.Id, new SelectList(Model._Rohstoffe, "Id", "Name"), new {id = "selectRohstoff" + j})
                        }
                        else
                        {
                            <select>
                                <option>Keine Rohstoffe vorhanden</option>
                            </select>
                        }
                        <a> </a>
                        <input type="button" value="+" onclick="location.href = '@Url.Action("AddRohstoff", "Home", new {whichView = "Create"})' " class="btn btn-default"/>
                        <a> </a>
                        <input onclick="btndeleteRohstoff(@j)" type="button" value="-" class="btn btn-default"/>
                    </td>
                    <td>
                        @Html.EditorFor(m => m.ProduktRohstoff.ElementAt(j).Rohstoff.Menge_in_t, new {htmlAttributes = new {id = "rohmenge" + j}})
                        @Html.ValidationMessageFor(m => m.ProduktRohstoff.ElementAt(j).Rohstoff.Menge_in_t, "", new {@class = "text-danger"})
                    </td>
                    <td>
                        <select id="rohmengeeinheit"+@j>
                            <option>g</option>
                            <option>kg</option>
                            <option>t</option>
                            <option>kWh</option>
                        </select>
                    </td>
                    @for (int i = 0; i < Model.ProduktRohstoff.ElementAt(j).LRohstoffe.Count; i++)
                    {
                        <td>
                            @if (Model._LIndikator != null)
                            {
                                @Html.DropDownListFor(m => m.ProduktRohstoff.ElementAt(j).LRohstoffe.ElementAt(i).Umweltindikator_Id, new SelectList(Model._LIndikator, "Id", "Name"), new {id = "selectIndi" + i})
                            }
                            else
                            {
                                <select>
                                    <option>Keine Indikatoren vorhanden</option>
                                </select>
                            }
                            <a> </a>
                            <input type="button" value="+" onclick="location.href = '@Url.Action("AddIndikator", "Home", new {whichView = "Create"})' " class="btn btn-default"/>
                            <a> </a>
                            <input onclick="btndeleteIndi(@i)" type="button" value="-" class="btn btn-default"/>
                        </td>
                        <td>
                            @Html.EditorFor(model => model.ProduktRohstoff.ElementAt(j).LRohstoffe.ElementAt(i).Wert, new {htmlAttributes = new {id = "indiwert" + i}})
                            @Html.ValidationMessageFor(model => model._Umweltindikatorwert.Wert, "", new {@class = "text-danger"})
                        </td>
                    }

                </tr>
                <tr>
                    <td colspan="3"></td>
                    <td colspan="2">
                        @*<a href='@Url.ActionL("Create", "Home",FormMethod.Post, new { _produktTypRohstoffIndikator = Model,indiAtRoh = j, whichOne = "indi"})'>*@
                        @*<button type="button" onclick="addRowIndikator(@j)" class="btn btn-default">Indikator hinzufügen</button>*@
                        <div><a href="#" id="addIndikator">Add Indikator</a>
                        </div>
                        <button type="button" onclick="addIndi(@j)">Indikator hinzufügen</button>
                    </td>
                </tr>


                <tr>
                    <td colspan="5">
                        <button id="btn_Rohstoff+(@j)" type="button" class="btn btn-default">Rohstoff hinzufügen</button>
                    </td>
                </tr>
            }
        </table>

        <hr/>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btnErstelen" type="submit" value="Eingabe speichern" class="btn btn-default"/>
            </div>
        </div>
    </div>

  
    <div>
        @Html.ActionLink("Zurück zur Liste", "Index")
    </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function() {
                $('#btndeleteTyp').click(function() {
                    var e = document.getElementById('selectTyp');
                    var slc = e.options[e.selectedIndex].value;
                    location.href = '@Html.Raw(Url.Action("DeleteProduktTyp", "Home"))' +
                        '?name=' +
                        slc +
                        '&_whichView=Create';
                });
            }
        );

    </script>
    <script type="text/javascript">
        $(document).ready(function() {
                $('#btnErstellen').click(function() {
                    var typ = document.getElementById('selectTyp');
                    var rohstoff = document.getElementById('selectRohstoff');
                    var indi = document.getElementById('selectIndi');
                    var slctyp = typ.options[typ.selectedIndex].value;
                    var slcroh = rohstoff.options[rohstoff.selectedIndex].value;
                    var slcindi = indi.options[indi.selectedIndex].value;
                    $.post('@Url.Action("Create", "Home", FormMethod.Post)',
                        {
                            typ: slctyp,
                            roh: slcroh,
                            indi: slcindi
                        },
                        function(data, status) {
                            alert("Data: " + data + "\nStatus: " + status);
                        }
                    );
                });
            }
        )

    </script>
    <script type="text/javascript">
        $(document).ready(function() {
                $('#btndeleteRohstoff').click(function() {
                    var e = document.getElementById('selectRohstoff');
                    var slc = e.options[e.selectedIndex].value;
                    location.href = '@Html.Raw(Url.Action("DeleteRohstoff", "Home"))' +
                        '?name=' +
                        slc +
                        '&roh=Create';
                });
            }
        );

        function btndeleteRohstoff(j) {
            var e = document.getElementById('selectRohstoff'+j);
            var slc = e.options[e.selectedIndex].value;
            location.href = '@Html.Raw(Url.Action("DeleteRohstoff", "Home"))' +
                '?name=' +
                slc +
                '&roh=Create';
        }
    </script>
    <script type="text/javascript">
        $(document).ready(function() {
            $('#addIndi').click(
                function(e) {
                   
                    e.preventDefault();

                    var $tableBody = $("#tb_1");
                    var $trLast = $tableBody.find("tr:last");
                    var $trNew = $trLast.clone();
                    alert($trLast);
                    var suffix = $trNew.find('input:first').attr('name').match(/\d+/);
                    $trNew.find("td:last").html('<a href="#">Entfernen</a>');
                    $.each($trNew.find(':input'),
                        function(i, val) {
                            var oldN = $(this).attr('name');
                            var NewN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                            $(this).attr('name', NewN);
                            var type = $(this).attr('type');
                            if (type.toLowerCase() === "text") {
                                $(this).attr("value", "");
                            }
                            $(this).removeClass("input-validation-error");
                        });
                    $trLast.after($trNew);


                    var form = $("form").removeData("validator").removeData("unobtrusiveValidation");
                    $.validator.unobtrusive.parse(form);
                }
            );
        });


        $(document).ready(function() {
                $('#btndeleteIndi').click(function() {
                    var e = document.getElementById('selectIndi');
                    var slc = e.options[e.selectedIndex].value;
                    location.href = '@Html.Raw(Url.Action("DeleteIndikator", "Home"))' +
                        '?name=' +
                        slc +
                        '&indi=Create';
                });
            }
        );

        function btndeleteIndi(i) {
            var e = document.getElementById('selectIndi'+i);
            var slc = e.options[e.selectedIndex].value;
            location.href = '@Html.Raw(Url.Action("DeleteIndikator", "Home"))' +
                '?name=' +
                slc +
                '&indi=Create';
        };
        
    </script>
}
}